@using BSquadGames.Classes.ConnectFour
@page "/connectMain"
@rendermode InteractiveServer

<link href="CSS/ConnectFourCSS.css" rel="stylesheet">

<h3>Connect four</h3>
<div>Loading...</div>

<div> @player.Name</div>

<div class="connect-grid">
    @for (int row = 0; row < 6; row++){
        @for (int col = 0; col < 7; col++){

            (int, int) id = (row, col);

            // Check if the cell is a valid clickable position for a disc
            bool isClickable = Board.DiscPlacement.Contains((row, col));

            // Highlight possible placement depending on current player
            if (currentlyMouseOverSquare == id && currentPlayer == 1)
            {
                moveToSquare = "MoveToSquareRed";
            }
            else if (currentlyMouseOverSquare == id && currentPlayer == 2)
            {
                moveToSquare = "MoveToSquareBlue";
            }
            else{
                moveToSquare = "";
            }

            <!-- Render individual grid square -->
            <div 
                class="connect-square" 
                id="@id"
                @onmouseover="() => OnMouseOver(id)"
                @onclick="isClickable ? (() => OnClick(id)) : null">

                <!-- Show the disc color or empty state -->
                @if(Board.grid[row, col] == 1)
                {
                    <div class="Red">1</div>
                }
                else if(Board.grid[row, col] == 2)
                {
                    <div class="Blue">2</div>
                }
                else if (Board.grid[row, col] == 0 && Board.DiscPlacement.Contains((row, col)))
                { 
                    <div>Free</div>
                }
                else
                {
                    <div></div>
                }
                <!-- Visual hover indicator for the potential drop location -->
                <div class="@moveToSquare"></div>
            </div>

        }
    }

</div>

<!-- DEBUG INFORMATION -->
<div></div>
<div>@Board.GameWinner</div>
<div>game is won: @Board.GameWon</div>
<div></div>

<button @onclick="NewGame">New Game!</button>
<button @onclick="WinnerCheck">CheckForWinner</button>

<div>@currentlyMouseOverSquare</div>
@foreach((int, int) freespots in Board.DiscPlacement){
    <div>Freespot: @freespots</div>
}


@code {
    ConnectFourBoard Board;
    (int, int) currentlyMouseOverSquare = (-1, -1);
    int currentPlayer = 1;

    ConnectFourPlayer player = new("Test");

    string moveToSquare = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Board = new();
    }

    // Starts a new game: resets board and updates valid moves
    public void NewGame()
    {
        Board.StartNewGame();
        WinnerCheck();
        currentPlayer = 1;
        Board.GetListPossibleCellsToPlaceDiscAt();
    }

    // Checks if there is a winner on the board
    public void WinnerCheck()
    {
        Board.CheckWinner();
    }


    // Called when mouse hovers over a square
    public void OnMouseOver((int, int) id)
    {
        currentlyMouseOverSquare = id;
    }

    // Handles clicking a valid cell to place a disc
    public void OnClick((int, int) id)
    {
        if(Board.DiscPlacement.Contains((id.Item1, id.Item2)))
        {
            // Place disc for current player
            Board.SetDiscAt(id.Item1, id.Item2, currentPlayer);

            // Switch to next player
            if (currentPlayer == 1)
            {
                currentPlayer = 2;
            }
            else
            {
                currentPlayer = 1;
            }

        }
        // Update list of available placements
        Board.GetListPossibleCellsToPlaceDiscAt();


    }

}
