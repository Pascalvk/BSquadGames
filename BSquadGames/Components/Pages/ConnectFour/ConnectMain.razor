@using BSquadGames.Classes.ConnectFour
@page "/connectMain"
@rendermode InteractiveServer

<link href="CSS/ConnectFourCSS.css" rel="stylesheet">

<h3>Connect four</h3>
<div>Loading...</div>

<div> @player.Name</div>

<div class="connect-grid">
    @for (int row = 0; row < 6; row++){
        @for (int col = 0; col < 7; col++){

            (int, int) id = (row, col);

            // Check if the cell is a valid clickable position for a disc
            bool isClickable = GameManager.ValidMoves.Contains((row, col));

            // Highlight possible placement depending on current player
            if (currentlyMouseOverSquare == id && currentPlayer == 1)
            {
                moveToSquare = "MoveToSquareRed";
            }
            else if (currentlyMouseOverSquare == id && currentPlayer == 2)
            {
                moveToSquare = "MoveToSquareBlue";
            }
            else{
                moveToSquare = "";
            }

            <!-- Render individual grid square -->
            <div 
            class="connect-square" 
            id="@id"
            @onmouseover="() => OnMouseOver(id)"
            @onclick="isClickable ? (() => OnClick(id)) : null">

                <!-- Show the disc color or empty state -->
                @if (GameManager.GetCellValue(row, col) == 1)
                {
                    <div class="Red">1</div>
                }
                else if (GameManager.GetCellValue(row, col) == 2)
                {
                    <div class="Blue">2</div>
                }
                else if (GameManager.GetCellValue(row, col) == 0 && GameManager.ValidMoves.Contains((row, col)))
                { 
                    <div>Free</div>
                }
                else
                {
                    <div></div>
                }
                <!-- Visual hover indicator for the potential drop location -->
                <div class="@moveToSquare"></div>
            </div>

        }
    }

</div>

<!-- DEBUG INFORMATION -->
<div></div>
<div>@GameManager.GameWinner</div>
<div>game is won: @GameManager.GameWon</div>
<div></div>

<button @onclick="NewGame">New Game!</button>
<div></div>
To Activate an AI ->
<input type="checkbox" @bind="IsChecked" />

<div>@currentlyMouseOverSquare</div>
@foreach((int, int) freespots in GameManager.ValidMoves){
    <div>Freespot: @freespots</div>
}


@code {
    ConnectFourGameManager GameManager;
    ConnectFourAI AIPlayer;
    private bool IsChecked = false;
    (int, int) currentlyMouseOverSquare = (-1, -1);
    int currentPlayer = 1;

    ConnectFourPlayer player = new("Test");

    string moveToSquare = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GameManager = new();
        AIPlayer = new(GameManager);
    }

    // Starts a new game: resets board and updates valid moves
    public void NewGame()
    {
        GameManager.StartNewGame();
    }

    // Called when mouse hovers over a square
    public void OnMouseOver((int, int) id)
    {
        currentlyMouseOverSquare = id;
    }

    // Handles clicking a valid cell to place a disc
    public void OnClick((int, int) id)
    {
        GameManager.MakeMove(id);

        if(IsChecked)
        {
            AIPlayer.MakeAnAIMove();
        }
    }

}
